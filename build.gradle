buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.7"
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
	}
}

ext {
	projectGroup = 'com.jojoldu.point'
	projectVersion = '0.0.1-'+new Date().format("yyyyMMddHHmmss")
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.3.1'
}

allprojects {
	apply plugin: 'com.github.kt3k.coveralls'
	apply plugin: 'jacoco'

	repositories {
		jcenter()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: "com.ewerk.gradle.plugins.querydsl"

	group = "${projectGroup}"
	version = "${projectVersion}"
	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
		jcenter()
		maven {
			url 'https://repo.spring.io/libs-milestone'
		}
	}

	springBoot {
		buildInfo {
			additionalProperties = [
					'group'         : "${projectGroup}",
					'version'       : "${projectVersion}",
					'build-datetime': new Date().format("yyyyMMddHHmmss")
			]
		}
	}

	def querydslSrcDir = 'src/main/generated'

	querydsl {
		library = "com.querydsl:querydsl-apt"
		jpa = true
		querydslSourcesDir = querydslSrcDir
	}

	sourceSets {
		main {
			java {
				srcDirs = ['src/main/java', querydslSrcDir]
			}
		}
	}

	dependencies {
		compile('org.springframework.boot:spring-boot-starter')
		compile("org.springframework.boot:spring-boot-starter-actuator")
		compile('org.apache.commons:commons-lang3:3.7')
		compile 'com.google.code.findbugs:jsr305:3.0.2'
		compile('org.projectlombok:lombok')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
		testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
	}

	jacocoTestReport {
		reports {
			html.enabled = true // human readable
			xml.enabled = true // required by coveralls
		}
	}
}

task jacocoRootReport(type: JacocoReport) {
	description = 'Generates an aggregate report from all subprojects'
	dependsOn = subprojects.test
	sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
	classDirectories =  files(subprojects.sourceSets.main.output)
	executionData = files(subprojects.jacocoTestReport.executionData)
	reports {
		html.enabled = true // human readable
		xml.enabled = true // required by coveralls
	}
}

coveralls {
	sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
	jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}